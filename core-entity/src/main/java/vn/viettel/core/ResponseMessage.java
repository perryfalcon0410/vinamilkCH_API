package vn.viettel.core;

public enum ResponseMessage {

    SUCCESSFUL(200, "OK"),
    CHANGE_PASSWORD_SUCCESSFUL(201, "Bạn đã thay đổi mật khẩu thành công"),
    CHANGE_PASSWORD_FAIL(202, "Thay đổi mật khẩu that bai"),

    SESSION_EXPIRED(408, "Session Expired"),
    DATA_NOT_FOUND(404, "Data not found"),

    UNKNOWN(5001, "Unknown"),
    NULL_POINTER_EXCEPTION(5002, "Null pointer exception"),
    SYSTEM_ERROR(5003, "system error"),

    // 1xxx - Authentication failed
    INVALID_TOKEN(1001, "Invalid Token."),
    NOT_AUTHORIZED(1002, "UnAuthorized."),
    NOT_EXISTS_EMAIL(1003, "Not exists email."),
    LOGIN_FAILED(1004, "Not correct email or password"),
    PRODUCT_NOT_FOUND(1005, "product not found"),
    FORBIDDEN(1006, "Forbidden"),

    // 2xxx - Data validation failed
    DATA_TYPE_ERROR(2000, "Data type not correct."), INVALID_BODY(2001, "Invalid body."),
    VALIDATED_ERROR(2002, "Validated error."),

    // 3xxx - Not found
    NOT_FOUND(3001, "Not Found."), NOT_EXISTS(3002, "Not Exists."),

    // 4xxx - Data manipulation failed
    NO_CONTENT(4000, "No Content."),
    CREATE_FAILED(4001, "Create failed."),
    UPDATE_FAILED(4002, "Update failed."),
    DELETE_FAILED(4003, "Delete failed."),
    NO_CONTENT_PASSED(4005, "No Content Passed."),
    DUPLICATE_PASSWORD(4006, "Enter new password"),


    // 5xxx - connection failed
    CONNECT_DATABASE_FAILED(5000, "Connect database failed."),
    /**
     * USER: 6000 -> 6999
     */
    USER_DOES_NOT_EXISTS(6000, "user does not exists"),
    USER_EMAIL_MUST_BE_NOT_NULL(6001, "email must be not null"),
    USER_PASSWORD_MUST_BE_NOT_NULL(6002, "password must be not null"),
    USER_ID_MUST_BE_NOT_NULL(6002, "id must be not null"),
    ADDRESS_DOES_NOT_EXIST(6003, "address not exist"),
    USER_NAME_MUST_NOT_BE_NULL(6004, "name must be not null"),
    ID_CARD_ALREADY_EXIST(6005, "IDCard already exist"),
    ID_CARD_DOES_NOT_EXIST(6006, "IDCard not exist"),
    ID_CARD_ALREADY_BELONG_TO_OTHER_PEOPLE(6007, "not your id card"),
    USER_TOKEN_MUST_BE_NOT_NULL(6008, "token must be not null"),
    USER_ACTIVATION_TOKEN_HAS_EXPIRED(6009, "the activation token has expired"),
    USER_FORGOT_PASSWORD_TOKEN_HAS_EXPIRED(6010, "the forgot password token has expired"),
    WAREHOUSE_ID_MUST_NOT_BE_NUll(6011, "warehouse id must not be null"),
    PASSWORD_MUST_NOT_BE_NULL(6165, "password must not be null"),
    MEMBER_CARD_ALREADY_BELONG_TO_OTHER_PEOPLE(6012, "not your member card"),
    SALE_ORDER_TYPE_MUST_NOT_BE_NULL(6013, "sale order type must not be null"),
    SHOP_NOT_FOUND(6014, "shop not found"),
    USER_OLD_PASSWORD_MUST_BE_NOT_NULL(6015, "oldPassword must be not null"),
    USER_OLD_PASSWORD_NOT_CORRECT(6016, "old password not correct"),
    USER_PASSWORD_IS_EXPIRED(6017, "user password is expired"),
    USER_NAME_MUST_BE_NOT_BLANK(6018, "name must be not blank"),
    USER_EMAIL_MUST_BE_NOT_BLANK(6019, "email must be not blank"),
    NOT_YOUR_COMPANY(6050, "not your company"),
    STOCK_NOT_FOUND(6051, "stock not found"),
    USER_UPDATE_FAILED(6052, "user update failed"),
    PRODUCT_OUT_OF_STOCK(6100, "not enough product to serve"),
    CUSTOMER_NUMBER_MUST_BE_NOT_NULL(6101, "customerNumber must be not null"),
    CUSTOMER_NAME_MUST_BE_NOT_BLANK(6102, "name must be must blank"),
    CUSTOMER_INFORMATION_DOES_NOT_EXIST(6150, "customer information does not exist"),
    CUSTOMER_INFORMATION_PHONE_MUST_BE_NOT_NULL(6152, "phone must be not null"),
    CUSTOMER_INFORMATION_GENDER_MUST_BE_NOT_NULL(6153, "gender must be not null"),
    CUSTOMER_STATUS_MUST_BE_NOT_NULL(6163,"CUSTOMER_STATUS_MUST_BE_NOT_NULL"),
    CUSTOMER_ADDRESS_MUST_NOT_BE_NULL(6164, "customer address must not be null"),
    CUSTOMER_CARD_HOLDER_NAME_MUST_BE_NOT_BLANK(6154, "cardHolderName must be not blank"),
    CUSTOMER_CARD_NUMBER_MUST_BE_NOT_BLANK(6155, "cardNumber must be not blank"),
    INVALID_USERNAME_OR_PASSWORD(6156, "wrong username or password"),
    CUSTOMER_CARD_EXP_YEAR_MUST_BE_NOT_BLANK(6157, "expYear must be not blank"),
    CUSTOMER_CARD_EXP_MONTH_MUST_BE_NOT_BLANK(6158, "expMonth must be not blank"),
    CUSTOMER_CARD_HAS_EXIST(6159, "card has exist"),
    USER_ROLE_MUST_BE_NOT_BLANK(6160, "role  must be not blank"),
    USER_STATUS_MUST_BE_NOT_BLANK(6161, "status  must be not blank"),
    MEMBER_CARD_NOT_EXIST(6162, "member card not exist"),
    CUSTOMER_NOT_EXIST(6163, "Customer does not exist"),
    ID_MUST_NOT_BE_NULL(6164, "required id must not be null"),
    /**
     * SALON: 7000 -> 7999
     */
    DELIVERY_TYPE_DOES_NOT_EXIST(7000, "delivery type does not exist"),
    DELIVERY_TYPE_MUST_BE_NOT_NULL(7001, "id must be not null"),
    SHOP_SHOPID_MUST_BE_NOT_NULL(7002, "shopId must be not null"),
    PAYMENT_METHOD_MUST_BE_NOT_NULL(7003, "name must be not blank"),
    SALON_NAME_MUST_BE_NOT_NULL(7004, "name must be not null"),
    SHOP_OWNERNAME_MUST_BE_NOT_BLANK(7005, "ownerName must be not blank"),
    SHOP_IDS_MUST_BE_NOT_EMPTY(7007, "ids must be not empty"),
    SHOP_IMAGE_MUST_BE_NOT_NULL(7008, "image must be not null"),
    SHOP_FAVICON_MUST_BE_ICON(7009, "favicon must be icon ('x-icon, png')"),
    SHOP_FEATURE_DOES_NOT_EXIST(7010, "shop feature does not exist"),
    SHOP_DOES_NOT_PUBLISH(7011, "shop does not publish"),
    SHOP_CAN_NOT_BE_CHANGE_PUBLISH(7012, "shop can not be change publish"),
    SHOP_CAN_NOT_BE_CHANGE_SETTING_TAB_DISPLAY(7013, "shop can not be change setting tab display"),
    SHOP_SETTING_TAB_DISPLAY_SHOW_RESERVATION_MUST_BE_NOT_NULL(7014, "showReservation must be not null"),
    SHOP_SETTING_TAB_DISPLAY_DOES_NOT_EXIST(7015, "shopSettingTabDisplay does not exist"),
    SHOP_EMAIL_MUST_BE_NOT_NULL(7016, "email must be not null"),
    SHOP_CAN_NOT_DELETE(7017, "shop can not delete"),
    SHOP_SETTING_TAB_DISPLAY_UNAVAILABLE(7018, "feature unavailabe for this shop"),
    SHOP_SETTING_TAB_DISPLAY_SHOW_INQUIRY_MUST_BE_NOT_NULL(7019, "showInquiry must be not null"),
    SHOP_SETTING_TAB_DISPLAY_SHOW_EVENT_RESERVATION_MUST_BE_NOT_NULL(7020, "show event reservation must be not null"),
    SHOP_SETTING_TAB_DISPLAY_SHOW_POINT_COUPON_MUST_BE_NOT_NULL(7021, "show point coupon must be not null"),
    SHOP_DISTRIBUTOR_ID_MUST_BE_NOT_NULL(7022, "distributor id must be not null"),
    SHOP_ALLOW_LOGIN_MUST_BE_NOT_NULL(7023, "allow login must be not null"),
    SHOP_DISTRIBUTOR_DOES_NOT_EXIST(7024, "distributor does not exist"),
    SALON_TYPE_MUST_BE_NOT_NULL(7025, "salon type must be not null"),
    SALON_MENU_MUST_BE_NOT_NULL(7026, "Salon menu must be not null"),
    SALON_HAIRDRESSER_ID_MUST_NOT_BE_NULL(7027, "Hairdresser Id must not be null"),
    SALON_HAIRDRESSER_MUST_EXIST(7028, "Hairdresser must exist"),
    SALON_MENU_IDS_MUST_BE_NOT_NULL(7029, "Salon menu ids  must be not null"),
    SALON_STYLE_ID_MUST_NOT_BE_NULL(7030, "Salon Style Id must not be null"),
    SALON_STYLE_MUST_EXIST(7031, "Salon Style must exist"),
    SALON_SLUG_MUST_BE_NOT_NULL(7032, "salon slug must be not null"),
    SALON_SLUG_MUST_BE_NOT_BLANK(7033, "salon slug must be not blank"),
    SALON_SLUG_FORMAT_INCORRECT(7034, "salon slug format incorrect"),
    SALON_SLUG_HAVE_EXISTED(7035, "salon slug have existed"),
    SALON_BUSINESS_HOURS_MUST_BE_NOT_NULL(7036, "The Salon has no business hour"),
    SALON_MENU_TYPE_NOT_EXIST(7037, "The Sallon menu type is not exist"),
    SALON_PAYMENT_METHOD_MUST_BE_NOT_NULL(7038, "payment method of salon must be not null"),
    SALON_LATITUDE_MUST_BE_NOT_NULL(7039, "latitude of salon must be not null"),
    SALON_LONGTITUDE_MUST_BE_NOT_NULL(7040, "longtitude of salon must be not null"),
    BUSINESS_HOUR_TYPE_MUST_BE_NOT_NULL(7041, "Business hour type must be not null"),
    START_HOUR_CAN_NOT_AFTER_END_HOUR(7042, "Start business hour can not after end business hour"),
    SALON_CATEGORY_MUST_BE_NOT_NULL(7043, "Salon category must be not null"),
    SALON_CATEGORY_MUST_BE_NOT_BLANK(7044, "Salon category must be not blank"),
    SALON_CATEGORY_ID_MUST_BE_NOT_NULL(7045, "id must be not null"),
    AREA_MUST_BE_NOT_BLANK(7046, "Area must be not blank"),
    COMMITMENT_CONDITION_MUST_BE_NOT_BLANK(7047, "Commitment condition must be not blank"),
    SALON_COUPON_DOES_NOT_EXIST(7048, "Salon coupon must be not null"),
    SALON_MENU_ID_NOT_EXIST(7050, "The salon menu id is not exist"),
    SALON_NAME_REQUEST_ALREADY_EXIST(7051, "The salon name request has already exist"),
    SALON_ID_REQUEST_MUST_BE_NOT_NULL(7052, "The salon id request must be not null"),
    SALON_STYLE_IS_NOT_EXIST(7053, "The salon id request must be not null"),
    SALON_STYLE_HAS_ALREADY_EXIST(7054, "This Salon Style has already exist"),
    SALON_ID_OR_SALON_STYLE_TYPE_ID_DOES_NOT_EXIST(7055, "The request salonId or salonStyleTypeId does not exist"),
    SALON_STYLE_TAG_IS_NOT_EXIST(7056, "The request salonId or salonStyleTypeId does not exist"),
    SALON_STYLE_NAME_HAS_ALREADY_EXIST(7057, "The style name has already exist"),

    /**
     * SHOP EVENT RESERVATION: 7100 -> 7150
     */
    SHOP_EVENT_RESERVATION_ID_MUST_BE_NOT_NULL(7100, "id event reservation must be not null"),
    SHOP_EVENT_RESERVATION_DOES_NOT_EXIST(7101, "event reservation does not exist"),
    SHOP_EVENT_RESERVATION_NAME_MUST_BE_NOT_NULL(7102, "event reservation name must be not null"),
    SHOP_EVENT_RESERVATION_NAME_MUST_BE_NOT_BLANK(7103, "event reservation name must be not blank"),
    SHOP_EVENT_RESERVATION_START_DATE_MUST_BE_NOT_NULL(7104, "event reservation start date must be not null"),
    SHOP_EVENT_RESERVATION_END_DATE_MUST_BE_NOT_NULL(7105, "event reservation end date must be not null"),
    SHOP_EVENT_RESERVATION_EMAIL_MUST_BE_NOT_NULL(7106, "event reservation email must be not null"),
    SHOP_EVENT_RESERVATION_EMAIL_MUST_BE_NOT_BLANK(7107, "event reservation email must be not blank"),
    SHOP_RECRUITMENT_NUMBER_CAN_NOT_BE_NULL(7108, "recruitment number of event reservation must be not null"),
    SHOP_EVENT_RESERVATION_APPLICATION_BUTTON_MUST_BE_NOT_NULL(7109, "event reservation apply button must be not null"),
    SHOP_EVENT_RESERVATION_APPLICATION_BUTTON_MUST_BE_NOT_BLANK(7110, "event reservation apply button must be not blank"),
    SHOP_EVENT_RESERVATION_IDS_MUST_BE_NOT_NULL(7111, "event reservation ids must be not empty"),
    SHOP_EVENT_CAN_NOT_DELETE(7112, "event reservation can not delete"),
    SHOP_EVENT_RESERVATION_IS_FULL(7113, "event reservation is full"),
    SHOP_PROGRAM_IS_FULL(7114, "shop program is full"),
    SHOP_PROGRAM_START_DATE_CAN_NOT_BEFORE_START_DATE_EVENT(7115, "shop program start date can not before start date of event"),
    SHOP_PROGRAM_NAME_MUST_BE_NOT_NULL(7116, "shop sub event name must be not null"),
    SHOP_PROGRAM_NAME_MUST_BE_NOT_BLANK(7117, "shop sub event name must be not blank"),
    SHOP_PROGRAM_CONTACT_EMAIL_MUST_BE_NOT_NULL(7118, "shop program contact email must be not null"),
    SHOP_PROGRAM_CONTACT_EMAIL_MUST_BE_NOT_BLANK(7119, "shop program contact email must be not blank"),
    SHOP_PROGRAM_APPLICATION_MUST_BE_NOT_NULL(7120, "shop program application button must be not null"),
    SHOP_PROGRAM_APPLICATION_MUST_BE_NOT_BLANK(7121, "shop program application button must be not blank"),
    SHOP_PROGRAM_ID_MUST_BE_NOT_NULL(7122, "shop program id must be not null"),
    SHOP_PROGRAM_DOES_NOT_EXIST(7123, "shop program does not exist"),
    SHOP_PROGRAM_IDS_MUST_BE_NOT_NULL(7124, "shop program ids must be not null"),
    SHOP_PROGRAM_CAN_NOT_DELETE(7125, "shop program can not delete"),
    SHOP_USER_ID_MUST_BE_NOT_NULL(7126, "user id must be not null"),
    SHOP_CUSTOMER_RESERVATION_DOES_NOT_EXIST(7127, "reservation does not exist"),
    SHOP_LANDING_PAGE_ID_MUST_BE_NOT_NULL(7128, "Shop landing page id must be not null"),
    SHOP_LANDING_PAGE_DOES_NOT_EXIST(7129, "Shop landing page does not exist"),
    SHOP_RESERVATION_EVENT_IS_FULL(7130, "Shop event reservation is full"),
    SHOP_RESERVATION_PROGRAM_IS_FULL(7131, "Shop program is full"),
    /**
     * SHOP/GROUP POINT/COUPON: 7151 -> 7199
     */
    POINT_COUPON_IS_FULL(7151, "point coupon is full"),
    POINT_COUPON_NAME_MUST_BE_NOT_NULL(7152, "point coupon name must be not null"),
    POINT_COUPON_NAME_MUST_BE_NOT_BLANK(7153, "point coupon name must be not blank"),
    POINT_COUPON_TYPE_MUST_BE_NOT_NULL(7154, "point coupon type must be not null"),
    POINT_COUPON_ID_MUST_BE_NOT_NULL(7155, "point coupon id must be not null"),
    POINT_COUPON_DOES_NOT_EXIST(7156, "point coupon does not exist"),
    POINT_COUPON_START_DATE_MUST_BE_GREATER_THAN_END_DATE(7157, "point coupon start date must be greater than end date"),
    POINT_COUPON_EXPIRATION_MUST_BE_GREATER_THAN_0(7157, "point coupon expiration must be greater than 0"),
    MEMBERSHIP_DOES_NOT_EXIST(7158, "membership does not exist"),
    MEMBERSHIP_ID_MUST_BE_NOT_NULL(7159, "membership id must be not null"),
    POINT_COUPON_IS_EMPTY(7160, "point coupon is empty"),
    POINT_COUPON_EXPIRATION_IS_EXIST(7161, "point coupon expiration is exist"),
    POINT_COUPON_IS_EXPIRED(7162, "point coupon is expired"),
    IT_IS_NOT_ENOUGH_POINT(7163, "it is't enough point"),
    POINT_COUPON_NUMBER_OF_POINT_MUST_BE_NOT_NULL(7164, "number of point must be not null"),
    POINT_COUPON_HISTORY_USER_USED(7165, "user has been used coupon"),
    MEMBERSHIP_ALREADY_EXIST(7166, "membership already exist"),
    MEMBERSHIP_OPT_IN_MUST_BE_NOT_NULL(7167, "membership opt_in must be not null"),

    /**
     * MENU-SETTING:7200 -> 7399
     */
    MENU_SETTING_DOES_NOT_EXISTS(7200, "menu setting does not exists"),
    MENU_SETTING_ID_MUST_BE_NOT_NULL(7201, "id must be not null"),
    MENU_SETTING_MENU_SETTING_ID_MUST_BE_NOT_NULL(7202, "menuSettingId must be not null"),
    MENU_SETTING_NAME_MUST_BE_NOT_BLANK(7203, "name must be not blank"),
    MENU_SETTING_STATUS_MUST_BE_NOT_NULL(7204, "status must be not null"),
    MENU_SETTING_WEEKDAY_MAX_LENGTH(7205, "weekday max length is 7"),
    MENU_SETTING_WEEKDAYS_NOT_CORRECT(7206, "weekdays value not correct"),
    MENU_SETTING_IS_ADVANCE_PAYMENT_MUST_BE_NOT_NULL(7207, "isAdvancePayment must be not null"),
    MENU_SETTING_IDS_MUST_BE_NOT_EMPTY(7208, "ids must be not empty"),
    MENU_SETTING_FROM_MUST_BE_NOT_NULL(7209, "from must be not null"),
    MENU_SETTING_TO_MUST_BE_NOT_NULL(7210, "to must be not null"),
    MENU_SETTING_WEEKDAYS_MUST_BE_NOT_NULL(7211, "weekdays must be not null"),
    MENU_SETTING_UNIT_PRICE_MUST_BE_NOT_NULL(7212, "unitPrice must be not null"),
    MENU_SETTING_VALUE_PRICE_MUST_BE_NOT_NULL(7213, "valuePrice must be not null"),
    MENU_SETTING_UNIT_TIME_MUST_BE_NOT_NULL(7214, "unitTime must be not null"),
    MENU_SETTING_VALUE_TIME_MUST_BE_NOT_NULL(7215, "valueTime must be not null"),
    MENU_SETTING_START_TIME_MUST_BE_NOT_NULL(7216, "startTime must be not null"),
    MENU_SETTING_END_TIME_MUST_BE_NOT_NULL(7217, "endTime must be not null"),
    MENU_SETTING_START_TIME_NOT_CORRECT(7218, "startTime not correct"),
    MENU_SETTING_END_TIME_NOT_CORRECT(7219, "endTime not correct"),
    MENU_SETTING_START_TIME_GEATER_END_TIME(7220, "startTime must be less than endTime"),
    MENU_SETTING_FROM_DATE_GEATER_TO_DATE(7221, "fromDate must be less than toDate"),
    MENU_SETTING_IS_FULL(7222, "menu is full"),
    MENU_SETTING_TYPE_MUST_BE_NOT_NULL(7223, "type must be not null"),
    MENU_SETTING_CAN_NOT_DELETE(7224, "menu setting can not delete"),
    MENU_SETTING_HIDE_IS_CUSTOMER_MUST_BE_NOT_NULL(7225, "hideInCustomer must be not null"),
    MENU_SETTING_PRICE_CALCULATED_METHOD_MUST_BE_NOT_NULL(7226, "priceCalculatedMethod must be not null"),
    MENU_SETTING_HAS_END_DATE_MUST_BE_NOT_NULL(7227, "hasEndDate mustbe not null"),
    MENU_SETTING_CREATE_FAILED(7250, "menu setting create failed"),
    MENU_SETTING_UPDATE_FAILED(7251, "menu setting update failed"),
    MENU_SETTING_DELETE_FAILED(7252, "menu setting delete failed"),
    MENU_SETTING_IS_INCLUDED_MUST_BE_NOT_NULL(7253, "tax type must be not null"),
    MENU_SETTING_INCREASE_MUST_BE_NOT_NULL(7254, "increase tax must be not null"),
    MENU_SETTING_NEED_APPROVAL_MUST_BE_NOT_NULL(7255, "need approval must not be null"),

    /**
     * SHOP-TYPE: 7400 -> 7599
     */
    SHOP_TYPE_DOES_NOT_EXISTS(7400, "shop type does not exists"),
    SHOP_TYPE_ID_MUST_BE_NOT_NULL(7401, "id must be not null"),
    SHOP_TYPE_SHOP_TYPE_ID_MUST_BE_NOT_NULL(7402, "shopTypeId must be not null"),
    /**
     * ITEM-SETTING-SERVICE: 8000 -> 8999
     */
    ITEM_SETTING_DOES_NOT_EXISTS(8000, "item setting does not exists"),
    ITEM_SETTING_ID_MUST_BE_NOT_NULL(8001, "id must be not null"),
    ITEM_SETTING_ITEM_ID_MUST_BE_NOT_NULL(8002, "itemId must be not null"),
    ITEM_SETTING_NAME_MUST_BE_NOT_BLANK(8003, "name must be not blank"),
    ITEM_SETTING_NUMBER_OF_PEOPLE_MUST_BE_NOT_NULL(8005, "numberOfPeople must be not null"),
    ITEM_SETTING_CLEANING_TIME_NOT_CORRECT(8006, "cleaning time not correct"),
    ITEM_SETTING_IDS_MUST_BE_NOT_EMPTY(8007, "ids must be not empty"),
    ITEM_SETTING_NOT_BELONG_TO_MENU_SETTING(8008, "itemId not belongs to menu setting"),
    ITEM_SETTING_NUMBER_OF_DAYS_RESERVATION_MUST_BE_NOT_NULL(8009, "numberOfDaysReservation must be not null"),
    ITEM_SETTING_RESERVE_IN_ADVANCE_DAYS_MUST_BE_NOT_NULL(8010, "reserveInAdvanceDays must be not null"),
    ITEM_SETTING_IS_FULL(8011, "item is full"),
    ITEM_SETTING_TYPE_MUST_BE_NOT_NULL(8012, "type must be not null"),
    ITEM_SETTING_TYPE_NOT_CORRECT(8013, "type not correct"),
    ITEM_SETTING_CAN_NOT_DELETE(8014, "item setting can not delete"),
    ITEM_SETTING_CREATE_FAILED(8050, "item setting create failed"),
    ITEM_SETTING_UPDATE_FAILED(8051, "item setting update failed"),
    ITEM_SETTING_DELETE_FAILED(8052, "item setting delete failed"),
    ITEM_SETTING_HIDE_IN_CUSTOMER_MUST_BE_NOT_NULL(8053, "item setting hide in customer field must be not null"),
    /**
     * SETTING-DAY-SERVICE: 9000 -> 9999
     */
    SETTING_DAY_DOES_NOT_EXISTS(9000, "setting day does not exists"),
    SETTING_DAY_ID_MUST_BE_NOT_NULL(9001, "id must be not null"),
    SETTING_DAY_MONTH_MUST_BE_NOT_NULL(9002, "month must be not null"),
    SETTING_DAY_YEAR_MUST_BE_NOT_NULL(9003, "year must be not null"),
    SETTING_DAY_SHOP_ID_MUST_BE_NOT_NULL(9004, "typeId (shop_id) must be not null"),
    SETTING_DAY_ITEM_ID_MUST_BE_NOT_NULL(9005, "typeId (item_id) must be not null"),
    SETTING_DAY_STATUS_MUST_BE_NOT_NULL(9006, "status must be not null"),
    SETTING_DAY_WEEKDAY_MUST_BE_NOT_NULL(9007, "weekdays must be not null"),
    SETTING_DAY_OPENING_HOUR_MUST_BE_NOT_NULL(9008, "openingHour must be not null"),
    SETTING_DAY_CLOSED_HOUR_MUST_BE_NOT_NULL(9009, "closedHour must be not null"),
    SETTING_DAY_BREAKTIME_START_MUST_BE_NOT_NULL(9010, "breaktimeStart must be not null"),
    SETTING_DAY_BREAKTIME_END_MUST_BE_NOT_NULL(9011, "breaktimeEnd must be not null"),
    SETTING_DAY_UNIT_PRICE_MUST_BE_NOT_NULL(9012, "unitPrice must be not null"),
    SETTING_DAY_REQUIRED_PAYMENT_MUST_BE_NOT_NULL(9013, "requiredPayment must be not null"),
    SETTING_DAY_SCHEDULE_DATE_MUST_BE_NOT_NULL(9014, "scheduleDate must be not null"),
    SETTING_DAY_STATUS_NOT_CORRECT(9015, "status only input 0 or 1"),
    SETTING_DAY_WEEKDAYS_NOT_CORRECT(9016, "weekdays must is between 0 and 6"),
    SETTING_DAY_OPENING_HOUR_NOT_CORRECT(9017, "openningHour not correct"),
    SETTING_DAY_CLOSED_HOUR_NOT_CORRECT(9018, "closedHour not correct"),
    SETTING_DAY_BREAKTIME_START_NOT_CORRECT(9019, "breaktimeStart not correct"),
    SETTING_DAY_BREAKTIME_END_NOT_CORRECT(9020, "breaktimeEnd not correct"),
    SETTING_DAY_OPENING_HOUR_GREATER_THAN_CLOSED_HOUR(9021, "openingHour must be less than closedHour"),
    SETTING_DAY_BREAKTIME_NOT_BETWEEN_OPENING_HOUR_AND_CLOSED_HOUR(9022, "breaktime must be between openingHour and closedHour"),
    SETTING_DAY_BREAKTIME_START_GREATER_THAN_BREAKTIME_END(9023, "breaktimeStart must be less than breaktimeEnd"),
    SETTING_DAY_REQUIRED_PAYMENT_NOT_CORRECT(9024, "requirePayment only input 0 or 1"),
    SETTING_DAY_MONTH_NOT_CORRECT(9025, "month must be between 1 and 12"),
    SETTING_DAY_YEAR_NOT_CORRECT(9026, "year must be between 1000 and 9999"),
    SETTING_DAY_CAN_NOT_EDIT(9027, "item already publish, can not edit"),
    SETTING_DAY_PUBLISH_DATE_MUST_BE_NOT_NULL(9028, "publishDate must be not null"),
    SETTING_DAY_SCHEDULE_NOT_PUBLISH(9029, "schedule not publish"),
    SETTING_DAY_ITEM_SCHEDULE_YEARMONTH_MUST_BE_NOT_NULL(9030, "yearMonth must be not null"),
    SETTING_DAY_ITEM_SCHEDULE_DATE_MUST_BE_NOT_NULL(9031, "date must be not null"),
    SETTING_DAY_CREATE_FAILED(9050, "create setting day failed"),
    SETTING_DAY_UPDATE_FAILED(9051, "update setting day failed"),
    SETTING_DAY_DELETE_FAILED(9052, "delete setting day failed"),
    /**
     * FEATURE-SERVICE: 10000 -> 10999
     */
    FEATURE_DOES_NOT_EXIST(10000, "feature does not exist"),
    FEATURE_ID_MUST_BE_NOT_NULL(10001, "id mustbe not null"),
    FEATURE_FEATURE_ID_MUST_BE_NOT_NULL(10002, "featureId must be not null"),
    FEATURE_PLAN_DOES_NOT_EXIST(10001, "feature plan does not exist"),
    FEATURE_PLAN_ID_MUST_BE_NOT_NULL(10010, "id must be not null"),
    FEATURE_PLAN_FEATURE_PLAN_ID_MUST_BE_NOT_NULL(10011, "featurePlanId must be not null"),
    FEATURE_PLAN_FEATURE_PLAN_IDS_MUST_BE_NOT_EMPTY(10012, "featurePlanIds must be not empty"),
    /**
     * PAYMENT-SERVICE: 11000 -> 11999
     */
    PAYMENT_ID_MUST_BE_NOT_NULL(11000, "id must be not null"),
    PAYMENT_PAYMENT_ID_MUST_BE_NOT_NULL(11001, "paymentId must be not null"),
    PAYMENT_DETAIL_TYPE_MUST_BE_NOT_NULL(11002, "type must be not null"),
    PAYMENT_DETAIL_TYPE_ID_MUST_BE_NOT_NULL(11003, "typeId must be not null"),
    PAYMENT_DETAIL_STATUS_MUST_BE_NOT_NULL(11004, "status must be not null"),
    PAYMENT_DETAIL_SHOP_IDS_MUST_BE_NOT_EMPTY(11005, "shopIds must be not empty"),
    PAYMENT_DETAIL_MUST_BE_YEAR_MONTH_FORMAT(11006, "paymentMonth must be year month format"),
    PAYMENT_YEAR_MUST_BE_NOT_NULL(11007, "year must be not null"),
    PAYMENT_MONTH_MUST_BE_NOT_NULL(11008, "paymentMonth must be not null"),
    CUSTOMER_PAYMENT_PRICE_MUST_BE_NOT_NULL(11009, "price must be not null"),
    CUSTOMER_PAYMENT_TAX_PRICE_MUST_BE_NOT_NULL(11010, "taxPrice must be not null"),
    CUSTOMER_PAYMENT_TOTAL_PRICE_MUST_BE_NOT_NULL(11011, "totalPrice must be not null"),
    PAYMENT_DETAIL_CREATE_FAILED(11050, "payment detail create failed"),
    PAYMENT_DETAIL_UPDATE_FAILED(11051, "payment detail update failed"),
    PAYMENT_DETAIL_DELETE_FAILED(11052, "payment detail delete failed"),
    PLAN_PLAN_ID_MUST_BE_NOT_NULL(11500, "planId must be not null"),
    PLAN_CAN_NOT_BE_CHANGED(11501, "plan can not be changed"),
    PLAN_DOES_NOT_EXIST(11502, "plan does not exist"),
    PAYMENT_IMAGE_MUST_BE_NOT_NULL(11503, "image must be not null"),
    PAYMENT_SQUARE_MINIMUM_AMOUNT(11504, "square minimum amount is 100¥"),
    PAYMENT_SQUARE_INVALID_CURRENCY(11505, "This business can only process payments in JPY"),

    /**
     * RESERVATION-SERVICE: 12000 -> 12999
     */
    RESERVATION_DOES_NOT_EXIST(12000, "reservation does not exist"),
    RESERVATION_DATE_MUST_BE_NOT_NULL(12001, "date must be not null"),
    RESERVATION_NUMBER_OF_HOUR_MUST_BE_NOT_NULL(12002, "numberOfHour must be not null"),
    RESERVATION_NUMBER_OF_PEOPLE_MUST_BE_NOT_NULL(12003, "numberOfPeople must be not null"),
    RESERVATION_START_TIME_MUST_BE_NOT_NULL(12004, "startTime must be not null"),
    RESERVATION_END_TIME_MUST_BE_NOT_NULL(12005, "endTime must be not null"),
    RESERVATION_NAME_MUST_BE_NOT_BLANK(12006, "name must be not blank"),
    RESERVATION_PHONE_MUST_BE_NOT_BLANK(12007, "phoneNumber must be not blank"),
    RESERVATION_TIME_START_GREATER_TIME_END(12008, "timeStart must be less than timeEnd"),
    RESERVATION_DATE_LESS_THAN_CURRENT_DATE(12009, "date less than current date"),
    RESERVATION_MENUSETTING_NOT_OPEN(12010, "menuSetting not open"),
    RESERVATION_RESERVATION_ID_MUST_BE_NOT_NULL(12011, "reservationId must be not null"),
    RESERVATION_CAN_NOT_CANCEL(12012, "reservation can not cancel"),
    RESERVATION_MULTIPLE_TIME_DOES_NOT_EXIST(12013, "reservation multiple time does not exist"),
    RESERVATION_NOT_VALID(12014, "reservation not valid"),
    RESERVATION_TIME_MUST_BE_NOT_NULL(12015, "time must be not null"),
    RESERVATION_TIME_START_LESS_THAN_CURRENT_TIME(12016, "timeStart lest than current time"),
    RESERVATION_IS_FULL(12017, "reservation is full"),
    RESERVATION_DATE_NOT_VALID(12018, "reservation date must be greater than or equal to current date"),
    RESERVATION_TIME_NOT_VALID(12019, "reservation time must be greater current time"),
    RESERVATION_HOURS_NOT_VALID(12020, "hour not valid"),
    RESERVATION_CAN_NOT_VISIT(12021, "reservation can not change to visit"),
    RESERVATION_HAS_VISITED(12022, "reservation has visited"),
    RESERVATION_YEARMONTH_MUST_BE_NOT_NULL(12023, "yearMonth must be not null"),
    RESERVATION_TYPE_MUST_BE_NOT_NULL(12024, "type must be not null"),
    RESERVATION_ITEM_TYPE_MUST_BE_NOT_NULL(12025, "itemType must be not null"),
    RESERVATION_ITEM_INVALID(12051, "reservation item invalid"),
    RESERVATION_CREATE_FAILED(12050, "reservation create failed"),
    OBJECT_SETTING_DOMAIN_NAME_IS_EXIST(12051, "domain name is exist"),
    OBJECT_SETTING_DOMAIN_NAME_CAN_NOT_CONTAINS_SPACE(12052, "domain name can not contains space character"),
    OBJECT_SETTING_DOMAIN_NAME_MUST_BE_NOT_NULL(12053, "domain name must be not null"),
    OBJECT_SETTING_DOES_NOT_EXIST(12054, "object setting does not exist"),
    OBJECT_SETTING_CUSTOM_DOMAIN_IS_NOT_VALID(12055, "custom domain is not valid"),
    OBJECT_SETTING_CUSTOM_DOMAIN_DOES_NOT_EXIST(12056, "custom domain does not exist"),
    OBJECT_SETTING_CUSTOM_DOMAIN_MUST_BE_NOT_NULL(12057, "custom domain must be not null"),
    MESSAGE_ID_MUST_BE_NOT_NULL(12058, "message id must be not null"),
    MESSAGE_IDS_MUST_BE_NOT_EMPTY(12059, "message ids must be not empty"),
    MESSAGE_TITLE_MUST_BE_NOT_NULL(12060, "message title must be not null"),
    MESSAGE_TITLE_MUST_BE_NOT_BLANK(12061, "message title must be not blank"),
    MESSAGE_DOES_NOT_EXIST(12062, "message does not exist"),
    MESSAGE_IS_FULL(12063, "message is full"),
    CUSTOMER_PAYMENT_DOES_NOT_EXIST(12064, "customer payment does not exist"),
    RESERVATION_REQUEST_CAN_NOT_APPROVED(12065, "reservation request can not approved"),
    RESERVATION_CAN_NOT_REJECTED(12066, "reservation request can not rejected"),
    /**
     * PAYJP-SERVICE: 13000 -> 13999
     */
    PAYJP_PLAN_MUST_BE_NOT_NULL(13004, "plan must be not null"),
    PAYJP_CUSTOMER_MUST_BE_NOT_NULL(13005, "customer must be not null"),
    PAYJP_CARD_NAME_MUST_BE_NOT_NULL(13006, "holderName must be not null"),
    PAYJP_CARD_NUMBER_MUST_BE_NOT_NULL(13007, "cardNumber must be not null"),
    PAYJP_CARD_INVALID_NUMBER(13008, "invalid number"),
    PAYJP_CARD_INVALID_CVC(13009, "invalid cvc"),
    PAYJP_CARD_INVALID_EXPIRATION_DATE(13010, "invalid expiration year or month"),
    PAYJP_CARD_INVALID_EXPIRY_MONTH(13011, "invalid expiration month"),
    PAYJP_CARD_INVALID_EXPIRY_YEAR(13012, "invalid expiration year"),
    PAYJP_CARD_EXPIRED(13013, "card expired"),
    PAYJP_CARD_DECLINED(13014, "Card rejected by card company"),
    PAYJP_CARD_UNACCEPTABLE_BRAND(13015, "target card brand is not allowed"),
    PAYJP_CARD_INVALID_CARD_HOLDER_NAME(13016, "invalid card holder name"),
    PAYJP_CARD_INVALID(13017, "invalid card"),
    PAYJP_CARD_PROCESSING_ERROR(13018, "errors on the payment network"),
    /**
     * SHOP-NOTIFICATION: 14000 -> 14999
     */
    SHOP_NOTIFICATION_DOES_NOT_EXIST(14000, "notification does not exist"),
    SHOP_NOTIFICATION_ID_MUST_BE_NOT_NULL(14001, "id must be not null"),
    SHOP_NOTIFICATION_TITLE_MUST_BE_NOT_NULL(14002, "title must be not null"),
    SHOP_NOTIFICATION_START_DATE_MUST_BE_NOT_NULL(14003, "startDate must be not null"),
    SHOP_NOTIFICATION_END_DATE_MUST_BE_NOT_NULL(14004, "endDate must be not null"),
    SHOP_NOTIFICATION_START_DATE_MUST_BE_LESS_THAN_END_DATE(14005, "startDate must be less than endDate"),
    SHOP_NOTIFICATION_CONTENT_TYPE_MUST_BE_NOT_NULL(14006, "contentType must be not null"),
    SHOP_NOTIFICATION_IDS_NOT_EMPTY(14007, "ids must be not empty"),
    SHOP_NOTIFICATION_IS_FULL(14008, "notification is full"),
    /**
     * CUSTOMER_SEND_INQUIRY 15000 -> 15999
     */
    SHOP_NOT_OPEN_INQUIRY(15000, "shop not open inquiry"),
    CUSTOMER_SEND_INQUIRY_NAME_MUST_BE_NOT_NULL(15001, "customerName must be not null"),
    CUSTOMER_SEND_INQUIRY_EMAIL_MUST_BE_NOT_NULL(15002, "customerEmail must be not null"),
    CUSTOMER_SEND_INQUIRY_SUBJECT_MUST_BE_NOT_NULL(15003, "subject must be not null"),
    CUSTOMER_SEND_INQUIRY_CONTENT_MUST_BE_NOT_NULL(15004, "content must be not null"),
    GROUP_NOT_OPEN_INQUIRY(15005, "group not open inquiry"),
    CUSTOMER_SEND_INQUIRY_COMPANY_NAME_MUST_BE_NOT_NULL(15006, "company name must be not null"),
    CUSTOMER_SEND_INQUIRY_ZIP_CODE_MUST_BE_NOT_NULL(15007, "zip code must be not null"),
    CUSTOMER_SEND_INQUIRY_DIVISION_MUST_BE_NOT_NULL(15008, "division name must be not null"),
    USER_IS_NOT_ACTIVE(15009, "this user is not active"),
    /**
     * GROUP 16000 -> 16999
     */
    GROUP_DOES_NOT_EXIST(16000, "group does not exist"),
    GROUP_ID_MUST_BE_NOT_NULL(16001, "groupId must be not null"),
    GROUP_NAME_MUST_BE_NOT_NULL(16002, "name must be not null"),
    GROUP_NAME_KANA_MUST_BE_NOT_NULL(16003, "nameKana must be not null"),
    GROUP_TYPE_ID_MUST_BE_NOT_NULL(16004, "groupTypeId must be not null"),
    GROUP_OFFICER_NAME_MUST_BE_NOT_NULL(16005, "officerName must be not null"),
    GROUP_OPEN_STATUS_MUST_BE_NOT_NULL(16006, "openStatus must be not null"),
    GROUP_FAVICON_MUST_BE_ICON(16007, "favicon must be icon ('x-icon, png')"),
    GROUP_IDS_MUST_BE_NOT_NULL(16008, "groupIds must be not null"),
    GROUP_CAN_NOT_BE_CHANGE_PUBLISH(16009, "group can not be change publish"),
    GROUP_OBJECT_SHOP_MUST_BE_NOT_NULL(16010, "objectShop must be not null"),
    GROUP_CODE_MUST_BE_NOT_NULL(16011, "groupCode must be not null"),
    GROUP_SHOP_SHOP_CODE_MUST_BE_NOT_NULL(16100, "shopCode must be not null"),
    GROUP_SHOP_IS_FULL(16101, "affiliated shop is full"),
    GROUP_SHOP_HAS_EXIST(16102, "shop has exist"),
    GROUP_SHOP_ID_MUST_BE_NOT_NULL(16103, "id must be not null"),
    GROUP_SHOP_DOES_NOT_EXIST(16104, "group shop does not exist"),
    GROUP_SHOP_IDS_MUST_BE_NOT_EMPTY(16104, "ids must be not empty"),
    GROUP_IMAGE_MUST_BE_NOT_NULL(16105, "image must be not null"),
    GROUP_SETTING_TAB_DISPLAY_UNAVAILABLE(16150, "feature not available for this group"),
    GROUP_SETTING_TAB_DISPLAY_SHOW_RESERVATION_MUST_BE_NOT_NULL(16151, "showReservation must be not null"),
    GROUP_SETTING_TAB_DISPLAY_SHOW_INQUIRY_MUST_BE_NOT_NULL(16152, "showInquiry must be not null"),
    GROUP_SETTING_DAY_DOES_NOT_EXIST(16200, "setting day does not exist"),
    GROUP_SETTING_DAY_ID_MUST_BE_NOT_NULL(16201, "id must be not null"),
    GROUP_SETTING_DAY_OPEN_STATUS_MUST_BE_NOT_NULL(16202, "openStatus must be not null"),
    GROUP_SETTING_DAY_WEEKDAY_MUST_BE_NOT_NULL(16203, "weekday must be not null"),
    GROUP_SETTING_DAY_OPENING_HOUR_MUST_BE_NOT_NULL(16204, "openingHour must be not null"),
    GROUP_SETTING_DAY_CLOSED_HOUR_MUST_BE_NOT_NULL(16205, "closedHour must be not null"),
    GROUP_SETTING_DAY_BREAK_TIME_START_MUST_BE_NOT_NULL(16206, "breaktimeStart must be not null"),
    GROUP_SETTING_DAY_BREAK_TIME_END_MUST_BE_NOT_NULL(16207, "breaktimeEnd must be not null"),
    GROUP_SETTING_DAY_OPENING_HOUR_NOT_CORRECT(16208, "openingHour not correct"),
    GROUP_SETTING_DAY_CLOSED_HOUR_NOT_CORRECT(16209, "closedHour not correct"),
    GROUP_SETTING_DAY_BREAK_TIME_START_NOT_CORRECT(16210, "breaktimeStart not correct"),
    GROUP_SETTING_DAY_BREAK_TIME_END_NOT_CORRECT(16211, "breatimeEnd not correct"),
    GROUP_SETTING_DAY_OPENING_HOUR_GREATER_THAN_CLOSED_HOUR(16212, "openingHour greater than closedHour"),
    GROUP_SETTING_DAY_BREAK_TIME_START_GREATER_THAN_BREAK_TIME_END(16213, "breatimeStart greater than breaktimeEnd"),
    GROUP_SETTING_DAY_BREAK_TIME_OUTSIDE_OPENING_HOUR(16214, "break time outside opening hour"),
    GROUP_EMAIL_MUST_BE_NOT_NULL(16215, "email must be not null"),
    GROUP_NAME_MUST_BE_NOT_BLANK(16216, "name must be not blank"),
    GROUP_NAME_KANA_MUST_BE_NOT_BLANK(16217, "nameKana must be not blank"),
    GROUP_OFFICER_NAME_MUST_BE_NOT_BLANK(16218, "officerName must be not blank"),
    GROUP_EMAIL_MUST_BE_NOT_BLANK(16219, "email must be not blank"),
    GROUP_SHOP_AFFILIATED_IS_FULL(16220, "group shop affiliated is full"),
    GROUP_EVENT_RESERVATION_ID_MUST_BE_NOT_NULL(16221, "id event reservation must be not null"),
    GROUP_EVENT_RESERVATION_DOES_NOT_EXIST(16222, "event reservation does not exist"),
    GROUP_PROGRAM_NAME_MUST_BE_NOT_NULL(16223, "group sub event name must be not null"),
    GROUP_PROGRAM_NAME_MUST_BE_NOT_BLANK(16224, "group sub event name must be not blank"),
    GROUP_PROGRAM_CONTACT_EMAIL_MUST_BE_NOT_NULL(16225, "group program contact email must be not null"),
    GROUP_PROGRAM_CONTACT_EMAIL_MUST_BE_NOT_BLANK(16226, "group program contact email must be not blank"),
    GROUP_PROGRAM_APPLICATION_MUST_BE_NOT_NULL(16227, "group program application button must be not null"),
    GROUP_PROGRAM_APPLICATION_MUST_BE_NOT_BLANK(16228, "group program application button must be not blank"),
    GROUP_RECRUITMENT_NUMBER_CAN_NOT_BE_NULL(16229, "recruitment number of event reservation must be not null"),
    GROUP_PROGRAM_IS_FULL(16230, "group program is full"),
    GROUP_PROGRAM_START_DATE_CAN_NOT_BEFORE_START_DATE_EVENT(16231, "group program start date can not before start date of event"),
    GROUP_PROGRAM_ID_MUST_BE_NOT_NULL(16232, "group program id must be not null"),
    GROUP_PROGRAM_DOES_NOT_EXIST(16233, "group program does not exist"),
    GROUP_PROGRAM_IDS_MUST_BE_NOT_NULL(16234, "group program ids must be not null"),
    GROUP_PROGRAM_CAN_NOT_DELETE(16235, "group program can not delete"),
    GROUP_SETTING_TAB_DISPLAY_SHOW_EVENT_RESERVATION_MUST_BE_NOT_NULL(16236, "show event reservation must be not null"),
    GROUP_EVENT_RESERVATION_IDS_MUST_BE_NOT_NULL(16237, "group event reservation ids must be not null"),
    GROUP_EVENT_RESERVATION_NAME_MUST_BE_NOT_NULL(16238, "group event reservation name must be not null"),
    GROUP_EVENT_RESERVATION_NAME_MUST_BE_NOT_BLANK(16239, "group event reservation name must be not blank"),
    GROUP_EVENT_RESERVATION_START_DATE_MUST_BE_NOT_NULL(16240, "group event reservation start date must be not null"),
    GROUP_EVENT_RESERVATION_END_DATE_MUST_BE_NOT_NULL(16241, "group event reservation end date must be not null"),
    GROUP_EVENT_RESERVATION_EMAIL_MUST_BE_NOT_NULL(16242, "group event reservation email must be not null"),
    GROUP_EVENT_RESERVATION_EMAIL_MUST_BE_NOT_BLANK(16243, "group event reservation must be not blank"),
    GROUP_EVENT_RESERVATION_APPLICATION_MUST_BE_NOT_NULL(16244, "group event reservation apply must be not null"),
    GROUP_EVENT_RESERVATION_APPLICATION_MUST_BE_NOT_BLANK(16245, "group event reservation apply must be not blank"),
    GROUP_EVENT_RESERVATION_APPLICATION_BUTTON_MUST_BE_NOT_NULL(16246, "group event reservation apply button must be not null"),
    GROUP_EVENT_RESERVATION_APPLICATION_BUTTON_MUST_BE_NOT_BLANK(16247, "group event reservation apply button must be not blank"),
    GROUP_EVENT_RESERVATION_IS_FULL(16248, "group event reservation is full"),
    GROUP_EVENT_CAN_NOT_DELETE(16249, "group event reservation can not delete"),
    GROUP_LANDING_PAGE_ID_MUST_BE_NOT_NULL(16250, "group landing page id must be not null"),
    GROUP_LANDING_PAGE_DOES_NOT_EXIST(16251, "group landing page does not exist"),
    GROUP_GROUPID_MUST_BE_NOT_NULL(16252, "group id must be not null"),
    GROUP_USER_ID_MUST_BE_NOT_NULL(16253, "user id must be not null"),
    GROUP_CUSTOMER_RESERVATION_DOES_NOT_EXIST(16254, "reservation does not exist"),
    GROUP_RESERVATION_EVENT_IS_FULL(16255, "reservation event is full"),
    GROUP_RESERVATION_PROGRAM_IS_FULL(16256, "reservation program is full"),
    GROUP_POINT_COUPON_IS_FULL(16257, "group point & coupon is full"),
    GROUP_POINT_COUPON_NAME_MUST_BE_NOT_NULL(16258, "group point & coupon name must be not null"),
    GROUP_POINT_COUPON_NAME_MUST_BE_NOT_BLANK(16259, "group point & coupon name must be not blank"),
    GROUP_POINT_COUPON_START_DATE_MUST_BE_NOT_NULL(16260, "group point & coupon start date must be not null"),
    GROUP_POINT_COUPON_END_DATE_MUST_BE_NOT_NULL(16261, "group point & coupon end date must be not null"),
    GROUP_POINT_COUPON_TYPE_MUST_BE_NOT_NULL(16262, "group point & coupon type must be not null"),
    GROUP_POINT_COUPON_ID_MUST_BE_NOT_NULL(16263, "group point & coupon id must be not null"),
    GROUP_POINT_COUPON_DOES_NOT_EXIST(16264, "group point & coupon not exist"),
    GROUP_POINT_COUPON_IDS_MUST_BE_NOT_NULL(16265, "group point & coupon ids must be not null"),
    GROUP_POINT_COUPON_END_DATE_CAN_NOT_BEFORE_START_DATE(16266, "group point coupon end date can not before start date"),
    GROUP_POINT_COUPON_EXPIRATION_MUST_BE_GREATER_THAN_0(16267, "group point coupon expiration must be greater than 0"),

    /**
     * SHOP SETTING RESERVATION METHOD 17000 -> 17999
     */
    SHOP_SETTING_RESERVATION_METHOD_DOES_NOT_EXIST(17000, "setting reservation method does not exist"),
    SHOP_SETTING_RESERVATION_METHOD_SUNDAY_MUST_BE_NOT_NULL(17001, "methodSunday must be not null"),
    SHOP_SETTING_RESERVATION_METHOD_MONDAY_MUST_BE_NOT_NULL(17002, "methodMonday must be not null"),
    SHOP_SETTING_RESERVATION_METHOD_TUESDAY_MUST_BE_NOT_NULL(17003, "methodTuesday must be not null"),
    SHOP_SETTING_RESERVATION_METHOD_WEDNESDAY_MUST_BE_NOT_NULL(17004, "methodWednesday must be not null"),
    SHOP_SETTING_RESERVATION_METHOD_THURSDAY_MUST_BE_NOT_NULL(17005, "methodThursday must be not null"),
    SHOP_SETTING_RESERVATION_METHOD_FRIDAY_MUST_BE_NOT_NULL(17006, "methodFriday must be not null"),
    SHOP_SETTING_RESERVATION_METHOD_SATURDAY_MUST_BE_NOT_NULL(17007, "methodSaturday must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_14_DAYS_MUST_BE_NOT_NULL(17008, "refund rate for 14 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_13_DAYS_MUST_BE_NOT_NULL(17009, "refund rate for 13 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_12_DAYS_MUST_BE_NOT_NULL(17010, "refund rate for 12 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_11_DAYS_MUST_BE_NOT_NULL(17011, "refund rate for 11 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_10_DAYS_MUST_BE_NOT_NULL(17012, "refund rate for 10 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_9_DAYS_MUST_BE_NOT_NULL(17013, "refund rate for 9 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_8_DAYS_MUST_BE_NOT_NULL(17014, "refund rate for 8 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_7_DAYS_MUST_BE_NOT_NULL(17015, "refund rate for 7 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_6_DAYS_MUST_BE_NOT_NULL(17016, "refund rate for 6 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_5_DAYS_MUST_BE_NOT_NULL(17017, "refund rate for 5 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_4_DAYS_MUST_BE_NOT_NULL(17018, "refund rate for 4 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_3_DAYS_MUST_BE_NOT_NULL(17019, "refund rate for 3 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_2_DAYS_MUST_BE_NOT_NULL(17020, "refund rate for 2 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_1_DAYS_MUST_BE_NOT_NULL(17021, "refund rate for 1 days must be not null"),
    SHOP_SETTING_REFUND_RATE_FOR_0_DAYS_MUST_BE_NOT_NULL(17022, "refund rate for 0 days must be not null"),
    SHOP_SETTING_DESCRIPTION_FOR_REFUND_RATE_MUST_BE_NOT_NULL_OR_BLANK(17023, "description for refund rate must be not null or blank"),

    /**
     * GROUP NOTIFICATION 18000 -> 18999
     */
    GROUP_NOTIFICATION_DOES_NOT_EXIST(18000, "notification does not exist"),
    GROUP_NOTIFICATION_ID_MUST_BE_NOT_NULL(18001, "id must be not null"),
    GROUP_NOTIFICATION_TITLE_MUST_BE_NOT_NULL(18002, "title must be not null"),
    GROUP_NOTIFICATION_START_DATE_MUST_BE_NOT_NULL(18003, "startDate must be not null"),
    GROUP_NOTIFICATION_END_DATE_MUST_BE_NOT_NULL(18004, "endDate must be not null"),
    GROUP_NOTIFICATION_START_DATE_MUST_BE_LESS_THAN_END_DATE(18005, "startDate must be less than endDate"),
    GROUP_NOTIFICATION_CONTENT_TYPE_MUST_BE_NOT_NULL(18006, "contentType must be not null"),
    GROUP_NOTIFICATION_IDS_NOT_EMPTY(18007, "ids must be not empty"),
    GROUP_NOTIFICATION_IS_FULL(18008, "notification is full"),
    /**
     * OBJECT 19000 -> 19999
     */
    OBJECT_MUST_BE_NOT_NULL(19000, "object must be not null"),
    OBJECT_ID_MUST_BE_NOT_NULL(19001, "objectId must be not null"),
    OBJECT_DOES_NOT_EXIST(19002, "object does not exist"),

    /**
     * COMPANY 20000 -> 20999
     */
    COMPANY_DOES_NOT_EXIST(20000, "company does not exist"),
    COMPANY_ID_MUST_BE_NOT_NULL(20001, "companyId must be not null"),
    COMPANY_NAME_MUST_BE_NOT_NULL(20002, "name must be not null"),
    COMPANY_NAME_KANA_MUST_BE_NOT_NULL(20003, "nameKana must be not null"),
    //    COMPANY_TYPE_ID_MUST_BE_NOT_NULL(20004, "categoryId must be not null"),
    COMPANY_OFFICER_NAME_MUST_BE_NOT_NULL(20005, "officerName must be not null"),
    COMPANY_OPEN_STATUS_MUST_BE_NOT_NULL(20006, "openStatus must be not null"),
    COMPANY_FAVICON_MUST_BE_ICON(20007, "favicon must be icon ('x-icon, png')"),
    COMPANY_IMAGE_MUST_BE_NOT_NULL(20008, "image must be not null"),
    COMPANY_NAME_MUST_BE_NOT_BLANK(20009, "name must be not blank"),
    COMPANY_NAME_KANA_MUST_BE_NOT_BLANK(20010, "nameKana must be not blank"),
    COMPANY_IMAGE_MUST_BE_NOT_BLANK(20011, "image must be not blank"),
    COMPANY_IDS_MUST_BE_NOT_NULL(20012, "companyIds must be not null"),
    COMPANY_BRANCH_OFFICE_DOES_NOT_EXIST(20013, "company branch does not exist"),
    COMPANY_BRANCH_OFFICE_ID_MUST_BE_NOT_NULL(20014, "company branch office id must be not null"),
    COMPANY_BRANCH_OFFICE_NAME_MUST_BE_NOT_NULL(20015, "company branch office name must be not null"),
    COMPANY_BRANCH_OFFICE_NAME_MUST_BE_NOT_BLANK(20016, "company branch office name must be not blank"),
    COMPANY_BRANCH_OFFICE_IDS_MUST_BE_NOT_NULL(20014, "company branch office ids must be not null"),
    COMPANY_PRODUCT_SOLUTION_NAME_MUST_BE_NOT_NULL(20015, "company product solution name must be not null"),
    COMPANY_PRODUCT_SOLUTION_NAME_MUST_BE_NOT_BLANK(20016, "company product solution name must be not blank"),
    COMPANY_PRODUCT_SOLUTION_ID_MUST_BE_NOT_NULL(20017, "company product solution id must be not null"),
    COMPANY_PRODUCT_SOLUTION_DOES_NOT_EXIST(20018, "company product solution does not exist"),
    COMPANY_PRODUCT_SOLUTION_IS_FULL(20019, "company product solution is full"),
    COMPANY_START_DATE_MUST_BE_LESS_THAN_END_DATE(20020, "start date must be less than end date"),
    COMPANY_RECRUITMENT_IS_FULL(20021, "company recruitment is full"),
    COMPANY_RECRUITMENT_ID_MUST_BE_NOT_NULL(20022, "company recruitment id must be not null"),
    COMPANY_RECRUITMENT_NAME_MUST_BE_NOT_NULL(20023, "company recruitment name must be not null"),
    COMPANY_RECRUITMENT_NAME_MUST_BE_NOT_BLANK(20024, "company recruitment name must be not blank"),
    COMPANY_RECRUITMENT_IDS_MUST_BE_NOT_NULL(20025, "company recruitment ids must be not null"),
    COMPANY_RECRUITMENT_DOES_NOT_EXIST(20026, "company recruitment does not exist"),
    COMPANY_NOTIFICATION_DOES_NOT_EXIST(20027, "notification does not exist"),
    COMPANY_NOTIFICATION_ID_MUST_BE_NOT_NULL(20028, "id must be not null"),
    COMPANY_NOTIFICATION_TITLE_MUST_BE_NOT_NULL(20029, "title must be not null"),
    COMPANY_NOTIFICATION_START_DATE_MUST_BE_NOT_NULL(20030, "startDate must be not null"),
    COMPANY_NOTIFICATION_END_DATE_MUST_BE_NOT_NULL(20031, "endDate must be not null"),
    COMPANY_NOTIFICATION_START_DATE_MUST_BE_LESS_THAN_END_DATE(20032, "startDate must be less than endDate"),
    COMPANY_NOTIFICATION_CONTENT_TYPE_MUST_BE_NOT_NULL(20033, "contentType must be not null"),
    COMPANY_NOTIFICATION_IDS_NOT_EMPTY(20034, "ids must be not empty"),
    COMPANY_NOTIFICATION_IS_FULL(20035, "notification is full"),
    COMPANY_NOTIFICATION_TITLE_MUST_BE_NOT_BLANK(20036, "title must be not blank"),
    COMPANY_SETTING_TAB_DISPLAY_SHOW_EVENT_RESERVATION_MUST_BE_NOT_NULL(20037, "showEventReservation must be not null"),
    COMPANY_SETTING_TAB_DISPLAY_SHOW_PRODUCT_MUST_BE_NOT_NULL(20038, "showProduct must be not null"),
    COMPANY_SETTING_TAB_DISPLAY_SHOW_RECRUITMENT_MUST_BE_NOT_NULL(20039, "showRecruitment must be not null"),
    COMPANY_CAN_NOT_BE_CHANGE_PUBLISH(20040, "company can not be change publish"),
    COMPANY_EVENT_RESERVATION_ID_MUST_BE_NOT_NULL(20041, "company event reservation id must be not null"),
    COMPANY_EVENT_RESERVATION_NAME_MUST_BE_NOT_NULL(20042, "company event reservation name must be not null"),
    COMPANY_EVENT_RESERVATION_NAME_MUST_BE_NOT_BLANK(20043, "company event reservation name must be not blank"),
    COMPANY_EVENT_RESERVATION_START_DATE_MUST_BE_NOT_NULL(20044, "company event reservation start date must be not null"),
    COMPANY_EVENT_RESERVATION_END_DATE_MUST_BE_NOT_NULL(20045, "company event reservation end date must be not null"),
    COMPANY_EVENT_RESERVATION_APPLICATION_MUST_BE_NOT_NULL(20046, "company event reservation application button must be not null"),
    COMPANY_EVENT_RESERVATION_APPLICATION_MUST_BE_NOT_BLANK(20047, "company event reservation application button must be not blank"),
    COMPANY_EVENT_RESERVATION_IDS_MUST_BE_NOT_NULL(20048, "company event reservation ids must be not null"),
    COMPANY_EVENT_RESERVATION_DOES_NOT_EXIST(20049, "company event reservation does not exist"),
    COMPANY_EVENT_RESERVATION_IS_FULL(20050, "company event reservation is full"),
    COMPANY_EVENT_RESERVATION_EMAIL_MUST_BE_NOT_NULL(20051, "company event reservation contact email must be not null"),
    COMPANY_EVENT_RESERVATION_EMAIL_MUST_BE_NOT_BLANK(20052, "company event reservation contact email must be not blank"),
    COMPANY_LANDING_PAGE_DOES_NOT_EXIST(20053, "company landing page does not exist"),
    COMPANY_LANDING_PAGE_ID_MUST_BE_NOT_NULL(20054, "company landing page id must be not null"),
    COMPANY_PROGRAM_ID_MUST_BE_NOT_NULL(20055, "company program id must be not null"),
    COMPANY_PROGRAM_IDS_MUST_BE_NOT_NULL(20056, "company program ids must be not null"),
    COMPANY_PROGRAM_DOES_NOT_EXIST(20057, "company program does not exist"),
    COMPANY_PROGRAM_NAME_MUST_BE_NOT_NULL(20058, "company sub event name must be not null"),
    COMPANY_PROGRAM_NAME_MUST_BE_NOT_BLANK(20059, "company sub event name must be not blank"),
    COMPANY_PROGRAM_APPLICATION_MUST_BE_NOT_NULL(20060, "company program application button must be not null"),
    COMPANY_PROGRAM_APPLICATION_MUST_BE_NOT_BLANK(20061, "company program application button must be not blank"),
    COMPANY_PROGRAM_CONTACT_EMAIL_MUST_BE_NOT_NULL(20062, "company program contact email must be not null"),
    COMPANY_PROGRAM_CONTACT_EMAIL_MUST_BE_NOT_BLANK(20063, "company program contact email must be not blank"),
    COMPANY_PROGRAM_IS_FULL(20064, "company program is full"),
    COMPANY_PROGRAM_START_DATE_CAN_NOT_BEFORE_START_DATE_EVENT(20065, "company program start date can not before start date of event"),
    COMPANY_CAN_NOT_DELETE(20066, "company can not delete"),
    COMPANY_EVENT_CAN_NOT_DELETE(20067, "company event can not delete"),
    COMPANY_PROGRAM_CAN_NOT_DELETE(20068, "company program can not delete"),
    COMPANY_EMAIL_MUST_BE_NOT_NULL(20069, "company email must be not null"),
    COMPANY_EMAIL_MUST_BE_NOT_BLANK(20070, "company email must be not blank"),
    COMPANY_NOT_OPEN_INQUIRY(20071, "company not open inquiry"),
    COMPANY_RESERVATION_MUST_BE_NOT_NULL(20072, "company reservation must be not null"),
    COMPANY_USER_ID_MUST_BE_NOT_NULL(20073, "user id must be not null"),
    COMPANY_CUSTOMER_RESERVATION_DOES_NOT_EXIST(20074, "reservation does not exist"),
    COMPANY_RECRUITMENT_NUMBER_CAN_NOT_BE_NULL(20075, "Recruitment number can not be null"),
    COMPANY_RESERVATION_PROGRAM_IS_FULL(20076, "Program is full"),
    COMPANY_RESERVATION_EVENT_IS_FULL(20077, "Event is full"),
    COMPANY_EVENT_RESERVATION_END_DATE_MUST_BE_GREATER_THAN_START_DATE(20078, "company event end date must be greater than event start date."),
    COMPANY_EVENT_APPLICATION_END_DATE_MUST_BE_GREATER_THAN_START_DATE(20079, "company application end date must be greater than application start date."),
    COMPANY_EVENT_APPLICATION_START_DATE_MUST_BE_BEFORE_EVENT_START_DATE(20080, "company application start date must be before event start date."),
    COMPANY_EVENT_APPLICATION_START_DATE_MUST_BE_NOT_NULL(20081, "company event application start date must be not null"),
    COMPANY_EVENT_APPLICATION_END_DATE_MUST_BE_NOT_NULL(20082, "company event application end date must be not null"),
    COMPANY_PRODUCT_SOLUTION_SALE_START_DATE_MUST_BE_BEFORE_END_DATE(20083, "company product solution sale start date must be before end date."),
    COMPANY_PRODUCT_SOLUTION_SALE_START_DATE_MUST_BE_NOT_NULL(20084, "company product solution sale start date must be not null"),
    COMPANY_PRODUCT_SOLUTION_SALE_END_DATE_MUST_BE_NOT_NULL(20085, "company product solution sale end date must be not null"),
    COMPANY_PROGRAM_START_DATE_MUST_BE_NOT_NULL(20086, "company program start date must be not null"),
    COMPANY_PROGRAM_END_DATE_MUST_BE_NOT_NULL(20087, "company program end date must be not null"),
    COMPANY_PROGRAM_END_DATE_MUST_BE_GREATER_THAN_START_DATE(20088, "company program end date must be greater than start date."),
    COMPANY_PROGRAM_APPLICATION_END_DATE_MUST_BE_GREATER_THAN_START_DATE(20089, "company program application end date must be greater than start date."),
    COMPANY_PROGRAM_APPLICATION_START_DATE_MUST_BE_BEFORE_PROGRAM_START_DATE(20090, "company application start date must be before program start date."),
    COMPANY_PROGRAM_APPLICATION_START_DATE_MUST_BE_NOT_NULL(20091, "company program application start date must be not null"),
    COMPANY_PROGRAM_APPLICATION_END_DATE_MUST_BE_NOT_NULL(20092, "company program application end date must be not null"),
    COMPANY_RECRUITMENT_START_DATE_MUST_BE_NOT_NULL(20093, "company recruitment start date must be not null"),
    COMPANY_RECRUITMENT_END_DATE_MUST_BE_NOT_NULL(20094, "company recruitment end date must be not null"),
    COMPANY_SLUG_MUST_BE_NOT_NULL(20095, "company slug must be not null"),
    COMPANY_SLUG_MUST_BE_NOT_BLANK(20096, "company slug must be not blank"),
    COMPANY_SLUG_FORMAT_INCORRECT(20097, "company slug format incorrect"),
    COMPANY_SLUG_HAVE_EXISTED(20098, "company slug have existed"),
    COMPANY_FEATURE_NOT_AVAILABLE(20099, "The feature of this company has been disabled. Please contact admin."),
    COMPANY_FEATURE_EXCEPTION(20100, "The feature list is error. Please contact admin."),
    COMPANY_CATEGORY_DOES_NOT_EXIST(20101, "company category must be not null"),
    COMPANY_PRODUCT_DOES_NOT_EXIST(20102, "company product does not exists"),

    /**
     * TEANT MESSAGE 21000 -> 21099
     */
    TENANT_DOES_NOT_EXISTS(21000, "Tenant does not exist"),

    /**
     * AREA MESSAGE 21100 -> 21199
     */
    AREA_DOES_NOT_EXISTS(21100, "area does not exists"),
    AREA_ID_MUST_BE_NOT_NULL(21101, "area id must be not null"),

    /**
     * COMMON MESSAGE 30000 -> 39999
     */
    CREATED_BY_ID_MUST_BE_NOT_NULL(30000, "Created by id nust be not null"),

    /**
     * CUSTOMER MESSAGE 40000 -> 40999
     */
    CUSTOMER_LAST_NAME_MUST_BE_NOT_BLANK(40000, "Customer Last Name must be required"),
    CUSTOMER_LAST_NAME_MUST_BE_JAPANESE_CHARACTERS(40001, "Customer Last Name must be Japanese character"),
    CUSTOMER_FIRST_NAME_MUST_BE_NOT_BLANK(40002, "Customer First Name must be required"),
    CUSTOMER_FIRST_NAME_MUST_BE_JAPANESE_CHARACTERS(40003, "Customer First Name must be Japanese character"),
    CUSTOMER_LAST_KATAKANA_NAME_MUST_BE_NOT_BLANK(40004, "Customer Last Katakana Name must be required"),
    CUSTOMER_LAST_KATAKANA_NAME_MUST_BE_JAPANESE_CHARACTERS(40005, "Customer Last Katakana Name must be Japanese Katakana character"),
    CUSTOMER_FIRST_KATAKANA_NAME_MUST_BE_NOT_BLANK(40006, "Customer First Katakana Name must be required"),
    CUSTOMER_FIRST_KATAKANA_NAME_MUST_BE_JAPANESE_CHARACTERS(40007, "Customer First Name must be Japanese Katakana character"),
    CUSTOMER_BIRTH_DATE_MUST_BE_NUMBER(40008, "The Birth date of customer must be number"),
    CUSTOMER_BIRTH_MONTH_MUST_BE_NUMBER(40009, "The Birth month of customer must be number"),
    CUSTOMER_BIRTH_YEAR_MUST_BE_NUMBER(40010, "The Birth Year of customer must be number"),
    CUSTOMER_TELEPHONE_MUST_BE_NUMBER(40011, "The Telephone of customer must be number"),
    CUSTOMER_BIRTHDAY_MUST_BE_VALID(40012, "The Customer birthday must be valid"),
    CUSTOMER_QR_CODE_IS_INVALID(40013, "The QR of Customer which is used as registration is not valid"),
    COUPON_NOT_VALID(40014, "The coupon is invalid"),
    COUPON_IS_ALREADY_USED(40015, "The coupon is already used"),
    CUSTOMER_PHONE_NUMBER_IS_ALREADY_USED(40016, "Customer telephone number is already used"),
    MEMBER_QR_CODE_IS_INVALID(40017, "The QR of Member which is used as registration is not valid"),
    MEMBER_IS_NOT_EXISTED(40018, "This member is not a customer and vice versa"),
    BOOKING_QR_CODE_MUST_NOT_NULL(40019, "Booking qr code must not null"),
    BOOKING_RECEIPT_NOT_EXISTED(40020, "Booking Receipt not existed"),
    BOOKING_ID_MUST_NOT_NULL(40021, "Booking ID must not null"),
    BOOKING_INTERNAL_ERROR(40022, "Cannot booking : internal error"),
    BOOKING_TIME_TOO_LONG(40023, "Booking time is too long"),
    BOOKING_DATE_NOT_EXIST(40024, "Booking date not exist"),
    CANNOT_BE_BOOKED(40025, "Cann't booking"),
    CHANNEL_NOT_EXISTED(40026, "Channel must not existed"),
    CHANNEL_TYPE_MUST_NOT_NULL(40027, "Channel type must not null"),
    MEMBER_ZIP_CODE_MUST_NOT_NULL(40028, "Member zipcode cannot be null"),
    MEMBER_LAST_NAME_MUST_BE_NOT_BLANK(40029, "Member Last Name must be required"),
    MEMBER_LAST_NAME_MUST_BE_JAPANESE_CHARACTERS(40030, "Member Last Name must be Japanese character"),
    MEMBER_FIRST_NAME_MUST_BE_NOT_BLANK(40031, "Member First Name must be required"),
    MEMBER_FIRST_NAME_MUST_BE_JAPANESE_CHARACTERS(40032, "Member First Name must be Japanese character"),
    MEMBER_LAST_KATAKANA_NAME_MUST_BE_NOT_BLANK(40033, "Member Last Katakana Name must be required"),
    MEMBER_LAST_KATAKANA_NAME_MUST_BE_JAPANESE_CHARACTERS(40034, "Member Last Katakana Name must be Japanese Katakana character"),
    MEMBER_FIRST_KATAKANA_NAME_MUST_BE_NOT_BLANK(40035, "Member First Katakana Name must be required"),
    MEMBER_FIRST_KATAKANA_NAME_MUST_BE_JAPANESE_CHARACTERS(40036, "Member First Name must be Japanese Katakana character"),
    MEMBER_BIRTH_DATE_MUST_BE_NUMBER(40037, "The Birth date of member must be number"),
    MEMBER_BIRTH_MONTH_MUST_BE_NUMBER(40038, "The Birth month of member must be number"),
    MEMBER_BIRTH_YEAR_MUST_BE_NUMBER(40039, "The Birth Year of member must be number"),
    MEMBER_TELEPHONE_MUST_BE_NUMBER(40040, "The Telephone of member must be number"),
    MEMBER_PHONE_NUMBER_IS_ALREADY_USED(40041, "Member telephone number is already used"),
    PREFECTURE_NOT_EXISTED(40042, "Prefecture not existed"),
    BOOKING_NOT_EXISTED(40043, "Booking not existed"),
    THE_PHONE_NUMBER_HAS_ALREADY_EXIST(40043, "The phone number has already exist"),
    /**
     * RESERVATION MESSAGE 41000 -> 41999
     */
    RESERVATION_POINT_HISTORY_CAN_NOT_GET_SALON_NAME(41000, "Can't get salon name in history of member point"),
    RESERVATION_POINT_FROM_MEMBER_NOT_EXIST(41001, "Can't get source member for point transfer"),
    RESERVATION_POINT_TO_MEMBER_NOT_EXIST(41002, "Can't get destination member for point transfer"),
    RESERVATION_POINT_FROM_TO_MEMBER_NOT_EXIST(41003, "Can't get source - destination member for point transfer"),
    RESERVATION_POINT_NOT_ENOUGH_POINT_TO_TRANSFER(41004, "Not enough point to transfer"),
    RESERVATION_HISTORY_CAN_NOT_GET_SALON_NAME(41005, "Reservation history can not get salon name"),
    RESERVATION_MEMBER_HAS_NO_MY_SALON(41006, "Member has no salon"),

    /**
     * RECEPTION MESSAGE 42000 -> 42999
     */
    RECEPTION_DOES_NOT_EXIST(42000, "reception does not exist"),
    RECEIPT_NO_LOAN(42001, "Not accept loan in receipt"),
    NOT_ENOUGH_POINT_TO_USE(42002, "Member has not enough point to use"),
    NO_BOOKING_HISTORY(42003, "No booking history"),
    COUPON_IDS_IS_NULL(42004, "Coupon ids is null"),
    EXIST_A_COUPON_THAT_CANNOT_BE_COMBINE_USING(42005, "There is a coupon that cannot be combine with other coupon"),
    COUPON_ID_IS_NULL(42006, "Coupon is null"),
    NO_FREE_HAIRDRESSERS_AT_THE_MOMENT(42007, "There is no free hairdresser at the moment"),
    HAIR_STYLE_GROUP_CAN_NOT_BE_NULL(42008, "Hair style group can not be null"),
    START_SCHEDULE_DATE_CAN_NOT_BE_NULL(42009, "Start schedule date can not be null"),
    COUPON_IS_EXPIRED(42010, "Coupon is expired"),
    COUPON_DOES_NOT_EXISTS(42011, "Coupon does not exists"),
    COUPON_ID_MUST_NOT_NULL(42012, "Coupon ID must not null"),
    COUPON_IS_NOT_IN_SALON(42013, "There is a coupon not existed in salon"),
    SALON_ID_IS_NOT_EXIST(42014, "The salon Id request is not exist"),

    /**
     * ASSET MESSAGE 43000 -> 43999
     */
    ASSET_DOES_NOT_EXISTS(43000, "asset does not exists"),
    ASSET_CATEGORY_CANNOT_OPERATED(43001, "Asset category cannot be operated"),
    ASSET_CATEGORY_ID_MUST_NOT_NULL(43002, "Asset category id must not null"),
    ASSET_CATEGORY_DOES_NOT_EXISTS(43003, "asset category does not exists"),
    ASSET_CATEGORY_CAN_NOT_REMOVE(43004, "asset category cannot remove"),

    /**
     * SURVEY MESSAGE 44000 -> 44999
     */
    SURVEY_DOES_NOT_EXISTS(44000, "survey does not exists"),

    /**
     * MANAGEMENT USER MESSAGE 45000 -> 45999
     */
    MANAGEMENT_USER_DOES_NOT_EXISTS(45000, "management users does not exists"),
    ;

    private final int statusCode;
    private final String statusCodeValue;

    private ResponseMessage(int statusCode, String statusCodeValue) {
        this.statusCode = statusCode;
        this.statusCodeValue = statusCodeValue;
    }

    public int statusCode() {
        return statusCode;
    }

    public String statusCodeValue() {
        return statusCodeValue;
    }

    public static ResponseMessage getByStatus(int statusCode) {
        for (ResponseMessage e : values()) {
            if (e.statusCode == statusCode) return e;
        }
        return null;
    }

}
